version: "3.3"
services:
  # --------------- REDIS  ---------------
  redis:
    image: redis
    container_name: redis-container
    ports:
      - 6379:6379
    environment:
      - REDIS_PORT=6379
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - 7474:7474
      - 7687:7687
    #    volumes:
    #      - "./neo4j/data:/data"
    restart: on-failure
  # --------------- SERVICES  ---------------
  project-service:
    build:
      context: project
    container_name: project-service
    ports:
      - 8082:8082
    environment:
      - SERVER_PORT=8082
      - SPRING_APPLICATION_NAME=project-service
      - USER_SERVICE_NAME=user-service
      - GATEWAY_SERVICE_PORT=8090
      - NEO4J_NAME=neo4j
      - REDIS-NAME=redis
      - FRONTEND_SERVICE_NAME=frontend
      - FRONTEND_PORT=4200
    restart: always
  user-service:
    build:
      context: user
    container_name: user-service
    ports:
      - 8081:8081
    environment:
      - SERVER_PORT=8081
      - SPRING_APPLICATION_NAME=user-service
      - PROJECT_SERVICE_NAME=project-service
      - GATEWAY_SERVICE_PORT=8090
      - NEO4J_NAME=neo4j
      - REDIS-NAME=redis
      - FRONTEND_SERVICE_NAME=frontend
      - FRONTEND_PORT=4200
    restart: always
  api-service:
    build:
      context: api
    container_name: api-service
    ports:
      - 8090:8090
    environment:
      - SERVER_PORT=8090
      - SPRING_APPLICATION_NAME=api-service
      - PROJECT_SERVICE_NAME=project-service
      - USER_SERVICE_NAME=user-service
      - PROJECT_SERVICE_PORT=8082
      - USER_SERVICE_PORT=8081
      - REDIS-NAME=redis
      - FRONTEND_SERVICE_NAME=frontend
      - FRONTEND_PORT=4200
    restart: always
#  frontend:
#    build:
#      context: frontend
#    ports:
#      - 4200:4200
#    restart: always
